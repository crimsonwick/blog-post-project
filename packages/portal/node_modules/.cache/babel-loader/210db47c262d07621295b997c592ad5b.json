{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/blog-post-project/packages/portal/src/components/InputField.js\",\n    _s = $RefreshSig$();\n\n// import Visibility from '@mui/icons-material/Visibility';\n// import VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { FormLabel, OutlinedInput } from '@mui/material'; // import IconButton from '@mui/material/IconButton';\n// import InputAdornment from '@mui/material/InputAdornment';\n// import React, { useState } from 'react';\n\nimport { Controller, useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst InputField = props => {\n  _s();\n\n  // const [values, setValues] = useState({\n  //   password: '',\n  //   showPassword: false,\n  // });\n  // const handleChange = (prop) => (event) => {\n  //   setValues({ ...values, [prop]: event.target.value });\n  // };\n  // const handleClickShowPassword = () => {\n  //   setValues({\n  //     showPassword: !values.showPassword,\n  //   });\n  // };\n  // const handleMouseDownPassword = (event) => {\n  //   event.preventDefault();\n  // };\n  const {\n    register\n  } = useForm();\n  const customWidth = props.width;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"form-label-above\",\n      sx: {\n        fontFamily: 'Poppins',\n        display: 'block'\n      },\n      children: props.labelAbove\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Controller, {\n      name: props.name,\n      control: props.control,\n      ...register(props.name),\n      render: _ref => {\n        let {\n          field\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(OutlinedInput, { ...field,\n          // id=\"outlined-adornment-password\"\n          // type={values.showPassword ? 'text' : 'password'}\n          // value={values.password}\n          // onChange={handleChange('password')}\n          // endAdornment={\n          //   <InputAdornment position=\"end\">\n          //     <IconButton\n          //       aria-label=\"toggle password visibility\"\n          //       onClick={handleClickShowPassword}\n          //       onMouseDown={handleMouseDownPassword}\n          //       edge=\"end\"\n          //     >\n          //       {values.showPassword ? <VisibilityOff /> : <Visibility />}\n          //     </IconButton>\n          //   </InputAdornment>\n          // }\n          sx: {\n            borderRadius: '20px',\n            fontFamily: 'Poppins',\n            width: customWidth || '100%',\n            display: 'block'\n          },\n          placeholder: props.placeholder\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n      htmlFor: \"form-label-below\",\n      sx: {\n        fontFamily: 'Poppins',\n        fontSize: '14px'\n      },\n      children: props.labelBelow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(InputField, \"0JBRNwbftCCT+FcdElXUCqEL42Y=\", false, function () {\n  return [useForm];\n});\n\n_c = InputField;\nexport default InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"names":["FormLabel","OutlinedInput","Controller","useForm","InputField","props","register","customWidth","width","fontFamily","display","labelAbove","name","control","field","borderRadius","placeholder","fontSize","labelBelow"],"sources":["/home/ahmed/blog-post-project/packages/portal/src/components/InputField.js"],"sourcesContent":["// import Visibility from '@mui/icons-material/Visibility';\n// import VisibilityOff from '@mui/icons-material/VisibilityOff';\nimport { FormLabel, OutlinedInput } from '@mui/material';\n// import IconButton from '@mui/material/IconButton';\n// import InputAdornment from '@mui/material/InputAdornment';\n// import React, { useState } from 'react';\nimport { Controller, useForm } from 'react-hook-form';\n\nconst InputField = (props) => {\n  // const [values, setValues] = useState({\n  //   password: '',\n  //   showPassword: false,\n  // });\n\n  // const handleChange = (prop) => (event) => {\n  //   setValues({ ...values, [prop]: event.target.value });\n  // };\n\n  // const handleClickShowPassword = () => {\n  //   setValues({\n  //     showPassword: !values.showPassword,\n  //   });\n  // };\n\n  // const handleMouseDownPassword = (event) => {\n  //   event.preventDefault();\n  // };\n\n  const { register } = useForm();\n  const customWidth = props.width;\n  return (\n    <>\n      <FormLabel\n        htmlFor=\"form-label-above\"\n        sx={{ fontFamily: 'Poppins', display: 'block' }}\n      >\n        {props.labelAbove}\n      </FormLabel>\n\n      <Controller\n        name={props.name}\n        control={props.control}\n        {...register(props.name)}\n        render={({ field }) => (\n          <OutlinedInput\n            {...field}\n            // id=\"outlined-adornment-password\"\n            // type={values.showPassword ? 'text' : 'password'}\n            // value={values.password}\n            // onChange={handleChange('password')}\n            // endAdornment={\n            //   <InputAdornment position=\"end\">\n            //     <IconButton\n            //       aria-label=\"toggle password visibility\"\n            //       onClick={handleClickShowPassword}\n            //       onMouseDown={handleMouseDownPassword}\n            //       edge=\"end\"\n            //     >\n            //       {values.showPassword ? <VisibilityOff /> : <Visibility />}\n            //     </IconButton>\n            //   </InputAdornment>\n            // }\n            sx={{\n              borderRadius: '20px',\n              fontFamily: 'Poppins',\n              width: customWidth || '100%',\n              display: 'block',\n            }}\n            placeholder={props.placeholder}\n          />\n        )}\n      />\n      <FormLabel\n        htmlFor=\"form-label-below\"\n        sx={{ fontFamily: 'Poppins', fontSize: '14px' }}\n      >\n        {props.labelBelow}\n      </FormLabel>\n    </>\n  );\n};\n\nexport default InputField;\n"],"mappings":";;;AAAA;AACA;AACA,SAASA,SAAT,EAAoBC,aAApB,QAAyC,eAAzC,C,CACA;AACA;AACA;;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,iBAApC;;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;EAAA;;EAC5B;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA,MAAM;IAAEC;EAAF,IAAeH,OAAO,EAA5B;EACA,MAAMI,WAAW,GAAGF,KAAK,CAACG,KAA1B;EACA,oBACE;IAAA,wBACE,QAAC,SAAD;MACE,OAAO,EAAC,kBADV;MAEE,EAAE,EAAE;QAAEC,UAAU,EAAE,SAAd;QAAyBC,OAAO,EAAE;MAAlC,CAFN;MAAA,UAIGL,KAAK,CAACM;IAJT;MAAA;MAAA;MAAA;IAAA,QADF,eAQE,QAAC,UAAD;MACE,IAAI,EAAEN,KAAK,CAACO,IADd;MAEE,OAAO,EAAEP,KAAK,CAACQ,OAFjB;MAAA,GAGMP,QAAQ,CAACD,KAAK,CAACO,IAAP,CAHd;MAIE,MAAM,EAAE;QAAA,IAAC;UAAEE;QAAF,CAAD;QAAA,oBACN,QAAC,aAAD,OACMA,KADN;UAEE;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA,EAAE,EAAE;YACFC,YAAY,EAAE,MADZ;YAEFN,UAAU,EAAE,SAFV;YAGFD,KAAK,EAAED,WAAW,IAAI,MAHpB;YAIFG,OAAO,EAAE;UAJP,CAlBN;UAwBE,WAAW,EAAEL,KAAK,CAACW;QAxBrB;UAAA;UAAA;UAAA;QAAA,QADM;MAAA;IAJV;MAAA;MAAA;MAAA;IAAA,QARF,eAyCE,QAAC,SAAD;MACE,OAAO,EAAC,kBADV;MAEE,EAAE,EAAE;QAAEP,UAAU,EAAE,SAAd;QAAyBQ,QAAQ,EAAE;MAAnC,CAFN;MAAA,UAIGZ,KAAK,CAACa;IAJT;MAAA;MAAA;MAAA;IAAA,QAzCF;EAAA,gBADF;AAkDD,CAxED;;GAAMd,U;UAoBiBD,O;;;KApBjBC,U;AA0EN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}