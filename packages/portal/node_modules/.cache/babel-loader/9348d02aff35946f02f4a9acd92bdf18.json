{"ast":null,"code":"import axios from 'axios';\nconst baseURL = 'http://localhost:5000';\nexport const getLoginDetails = async object => {\n  return await axios.post(`${baseURL}/user/login`, object);\n};\nexport const getSignUpDetails = async object => {\n  return await axios.post(`${baseURL}/user/signup`, object);\n};\nexport const parseJwt = token => {\n  try {\n    // Get Token Header\n    const base64HeaderUrl = token.split('.')[0];\n    const base64Header = base64HeaderUrl.replace('-', '+').replace('_', '/');\n    const headerData = JSON.parse(window.atob(base64Header)); // Get Token payload and date's\n\n    const base64Url = token.split('.')[1];\n    const base64 = base64Url.replace('-', '+').replace('_', '/');\n    const dataJWT = JSON.parse(window.atob(base64));\n    dataJWT.header = headerData; // TODO: add expiration at check ...\n\n    return dataJWT;\n  } catch (err) {\n    return false;\n  }\n};\nexport const addPost = async (object, config) => {\n  return await axios.post(`${baseURL}/post`, object, config);\n};\nexport const gettingPosts = async config => {\n  return await axios.get(`${baseURL}/post`, {}, config);\n};","map":{"version":3,"names":["axios","baseURL","getLoginDetails","object","post","getSignUpDetails","parseJwt","token","base64HeaderUrl","split","base64Header","replace","headerData","JSON","parse","window","atob","base64Url","base64","dataJWT","header","err","addPost","config","gettingPosts","get"],"sources":["/home/farhan-amin/blog/packages/portal/src/services/LoginApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst baseURL = 'http://localhost:5000';\n\nexport const getLoginDetails = async(object) => {\n    return await axios.post(`${baseURL}/user/login`,object);\n}\n\nexport const getSignUpDetails = async(object) => {\n    return await axios.post(`${baseURL}/user/signup`,object);\n}\n\nexport const parseJwt = (token) =>  {\n    try {\n      // Get Token Header\n      const base64HeaderUrl = token.split('.')[0];\n      const base64Header = base64HeaderUrl.replace('-', '+').replace('_', '/');\n      const headerData = JSON.parse(window.atob(base64Header));\n  \n      // Get Token payload and date's\n      const base64Url = token.split('.')[1];\n      const base64 = base64Url.replace('-', '+').replace('_', '/');\n      const dataJWT = JSON.parse(window.atob(base64));\n      dataJWT.header = headerData;\n  \n  // TODO: add expiration at check ...\n      return dataJWT;\n    } catch (err) {\n      return false;\n    }\n  }\n  \n  export const addPost = async(object,config) => {\n    return await axios.post(`${baseURL}/post`,object,config)\n  }\n\n  export const gettingPosts = async(config) => {\n    return await axios.get(`${baseURL}/post`,{},config)\n  }"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAMC,MAAN,IAAiB;EAC5C,OAAO,MAAMH,KAAK,CAACI,IAAN,CAAY,GAAEH,OAAQ,aAAtB,EAAmCE,MAAnC,CAAb;AACH,CAFM;AAIP,OAAO,MAAME,gBAAgB,GAAG,MAAMF,MAAN,IAAiB;EAC7C,OAAO,MAAMH,KAAK,CAACI,IAAN,CAAY,GAAEH,OAAQ,cAAtB,EAAoCE,MAApC,CAAb;AACH,CAFM;AAIP,OAAO,MAAMG,QAAQ,GAAIC,KAAD,IAAY;EAChC,IAAI;IACF;IACA,MAAMC,eAAe,GAAGD,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAxB;IACA,MAAMC,YAAY,GAAGF,eAAe,CAACG,OAAhB,CAAwB,GAAxB,EAA6B,GAA7B,EAAkCA,OAAlC,CAA0C,GAA1C,EAA+C,GAA/C,CAArB;IACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYN,YAAZ,CAAX,CAAnB,CAJE,CAMF;;IACA,MAAMO,SAAS,GAAGV,KAAK,CAACE,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAlB;IACA,MAAMS,MAAM,GAAGD,SAAS,CAACN,OAAV,CAAkB,GAAlB,EAAuB,GAAvB,EAA4BA,OAA5B,CAAoC,GAApC,EAAyC,GAAzC,CAAf;IACA,MAAMQ,OAAO,GAAGN,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,IAAP,CAAYE,MAAZ,CAAX,CAAhB;IACAC,OAAO,CAACC,MAAR,GAAiBR,UAAjB,CAVE,CAYN;;IACI,OAAOO,OAAP;EACD,CAdD,CAcE,OAAOE,GAAP,EAAY;IACZ,OAAO,KAAP;EACD;AACF,CAlBI;AAoBL,OAAO,MAAMC,OAAO,GAAG,OAAMnB,MAAN,EAAaoB,MAAb,KAAwB;EAC7C,OAAO,MAAMvB,KAAK,CAACI,IAAN,CAAY,GAAEH,OAAQ,OAAtB,EAA6BE,MAA7B,EAAoCoB,MAApC,CAAb;AACD,CAFM;AAIP,OAAO,MAAMC,YAAY,GAAG,MAAMD,MAAN,IAAiB;EAC3C,OAAO,MAAMvB,KAAK,CAACyB,GAAN,CAAW,GAAExB,OAAQ,OAArB,EAA4B,EAA5B,EAA+BsB,MAA/B,CAAb;AACD,CAFM"},"metadata":{},"sourceType":"module"}